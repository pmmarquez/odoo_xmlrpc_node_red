[{"id":"ae642797.19b838","type":"tab","label":"workFlowTest","disabled":false,"info":""},{"id":"4d18240e.c1994c","type":"tab","label":"attachmentsTest","disabled":false,"info":""},{"id":"b6380cda.9ac23","type":"tab","label":"notificatioRequests","disabled":false,"info":""},{"id":"56bacf7d.d66aa","type":"tab","label":"userPartnerManagement","disabled":false,"info":""},{"id":"2258375b.14d9f8","type":"tab","label":"productManagemet","disabled":false,"info":""},{"id":"7ee1eea.22b161","type":"function","z":"ae642797.19b838","name":"createSOclient","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'alan@example.com'\nlet pass = 'alan'\n\nlet SO = {\n    'company_id': 1, \n    'order_line': [[0,0,{\n        'name': 'Servicio de Fontaneria', \n        'price_unit': 0.0, \n        'product_id': 39, \n        'product_uom': 1, \n        'product_uom_qty': 1.0, \n        'state': 'draft'\n    }]],\n    'partner_id': 44,\n    'title':'Arreglo de llave',\n    'require_materials':true,\n    'note':'Arreglo de llave',//descripcion del servicio\n    'commitment_date':'2020-10-20 07:30:30',//fecha y hora del pedido\n    'require_payment': false, \n    'require_signature': false,\n    'state': 'draft',\n    'address_street' : 'Av. de Monforte de Lemos',\n    'address_floor' : '1',\n    'address_portal' : '',\n    'address_number' : '36',\n    'address_door' : '21',\n    'address_stairs' : '',\n    'address_zip_code' : '28029',\n    'address_latitude' : '40,47558',\n    'address_longitude' : '-3,68992',\n}\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet create_confirm_SO = function() {\n    let inParams = []\n    inParams.push(SO)\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('sale.order', 'create', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            flow.set('SO',value)\n            global.set('SO',value)\n            node.send({payload:{SO:value}})\n            inParams = []\n            inParams.push(value)\n            params = []\n            params.push(inParams)\n            odoo.execute_kw('sale.order', 'action_confirm', params, function (err, value) {\n                if (err) {\n                node.send({payload:err})\n            } else {\n                node.send({payload:value})\n            }\n            })\n        }\n    })\n}\n\nodoo.connect(function (err) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        create_confirm_SO() \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":320,"y":100,"wires":[["7d7133a8.f5ae0c"]]},{"id":"9842248e.62b5d8","type":"inject","z":"ae642797.19b838","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":100,"wires":[["7ee1eea.22b161"]]},{"id":"7d7133a8.f5ae0c","type":"debug","z":"ae642797.19b838","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":100,"wires":[]},{"id":"1629478.f4652b9","type":"inject","z":"ae642797.19b838","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":160,"wires":[["439e2d4f.d4bc64"]]},{"id":"217e8ac0.b0cfe6","type":"debug","z":"ae642797.19b838","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":490,"y":160,"wires":[]},{"id":"439e2d4f.d4bc64","type":"function","z":"ae642797.19b838","name":"addCostsPOsuplier","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet uid;\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'gonzalez@example.com'\nlet pass = 'gonzalez'\n\nlet POline = {\n    'name':'Materiales',\n    'product_id': 16,\n    'product_uom': 1,\n    'product_qty': 2,\n    'price_unit': 50,\n    'date_planned':'',\n    'order_id': 0,\n}\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet addLinePO = function(so_name,partner_name) {\n    let inParams = []\n    inParams.push([['origin', 'ilike', so_name],['partner_id.name','ilike',partner_name]])\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('purchase.order', 'search', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:{PO:value}})\n            POline['order_id'] = value[0]\n            let inParams = []\n            inParams.push(value[0])\n            let params = []\n            params.push(inParams)\n            params.push({'fields':['date_order']})\n            odoo.execute_kw('purchase.order', 'read', params, function (err, value) {\n                if (err) {\n                    node.send({payload:err})\n                } else {\n                    node.send({payload:value})\n                    POline['date_planned'] = value[0]['date_order']\n                    node.send({payload:POline})\n                    let inParams = []\n                    inParams.push(POline)\n                    let params = []\n                    params.push(inParams)\n                    odoo.execute_kw('purchase.order.line', 'create', params, function (err, value) {\n                        if (err) {\n                            node.send({payload:err})\n                        } else {\n                            node.send({payload:value})\n                        }\n                    })\n                }\n            })\n            \n        }\n    })\n}\n\nlet find_user_partner_id = function(uid,so_name) {\n    let inParams = []\n    inParams.push([uid])\n    let params = []\n    params.push(inParams)\n    params.push({'fields':['partner_id']})\n    odoo.execute_kw('res.users', 'read', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:{partner_name:value[0]['partner_id'][1],soname:so_name}})\n            node.send({payload:{partner_info:value}})\n            addLinePO(so_name,value[0]['partner_id'][1])\n        }\n    })\n}\n\nlet find_SO_name = function(uid) {\n    const id_searched = flow.get('SO')\n    inParams = []\n    inParams.push([id_searched])\n    params = []\n    params.push(inParams)\n    params.push({'fields':['name']})\n    odoo.execute_kw('sale.order', 'read', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:{SO:value}})\n            find_user_partner_id(uid,value[0]['name'])\n        }\n    })\n}\n\nodoo.connect(function (err,value) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        node.send({payload:value})\n        find_SO_name(value) \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":330,"y":160,"wires":[["217e8ac0.b0cfe6"]]},{"id":"73b88d12.0b0164","type":"inject","z":"ae642797.19b838","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":220,"wires":[["5d696b1b.e77ae4"]]},{"id":"a373fc6e.fb47e","type":"debug","z":"ae642797.19b838","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":220,"wires":[]},{"id":"5d696b1b.e77ae4","type":"function","z":"ae642797.19b838","name":"aceptPOsuplier","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'gonzalez@example.com'\nlet pass = 'gonzalez'\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet acept_PO = function(so_name,partner_name) {\n    let inParams = []\n    inParams.push([['origin', 'ilike', so_name],['partner_id.name','ilike',partner_name]])\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('purchase.order', 'search', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            flow.set('PO',value[0])\n            global.set('PO',value[0])\n            node.send({payload:{PO:value[0]}})\n            inParams = []\n            inParams.push(value)\n            params = []\n            params.push(inParams)\n            odoo.execute_kw('purchase.order', 'set_state_sent', params, function (err, value) {\n                if (err) {\n                node.send({payload:err})\n            } else {\n                node.send({payload:value})\n            }\n            })\n        }\n    })\n}\n\nlet find_user_partner_id = function(uid,so_name) {\n    let inParams = []\n    inParams.push([uid])\n    let params = []\n    params.push(inParams)\n    params.push({'fields':['partner_id']})\n    odoo.execute_kw('res.users', 'read', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:{partner_name:value[0]['partner_id'][1],soname:so_name}})\n            acept_PO(so_name,value[0]['partner_id'][1])\n        }\n    })\n}\n\nlet find_SO_name = function(uid) {\n    const id_searched = flow.get('SO')\n    inParams = []\n    inParams.push([id_searched])\n    params = []\n    params.push(inParams)\n    params.push({'fields':['name']})\n    odoo.execute_kw('sale.order', 'read', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:{SO:value}})\n            find_user_partner_id(uid,value[0]['name'])\n        }\n    })\n}\n\nodoo.connect(function (err,value) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        node.send({payload:value})\n        find_SO_name(value) \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":320,"y":220,"wires":[["a373fc6e.fb47e"]]},{"id":"13a1bf96.6b7b2","type":"inject","z":"ae642797.19b838","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":280,"wires":[["dc1f2602.98a158"]]},{"id":"ce849770.fdd748","type":"debug","z":"ae642797.19b838","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":490,"y":280,"wires":[]},{"id":"dc1f2602.98a158","type":"function","z":"ae642797.19b838","name":"sendMsgPOclient","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'alan@example.com'\nlet pass = 'alan'\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet send_msg_PO = function() {\n    const id_po = flow.get('PO')\n    let inParams = []\n    inParams.push([id_po])\n    let params = []\n    params.push(inParams)\n    params.push({'body':'seguro que ese el precio','message_type':'comment','subtype_id':1})\n    odoo.execute_kw('purchase.order', 'message_post', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:value})\n        }\n    })\n}\n\nodoo.connect(function (err,value) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        node.send({payload:value})\n        send_msg_PO() \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":330,"y":280,"wires":[["ce849770.fdd748"]]},{"id":"4ac69571.217a9c","type":"inject","z":"ae642797.19b838","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":340,"wires":[["ed41a4c.ab1e758"]]},{"id":"61ce63ef.995bac","type":"debug","z":"ae642797.19b838","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":510,"y":340,"wires":[]},{"id":"ed41a4c.ab1e758","type":"function","z":"ae642797.19b838","name":"sendMsgPOsupplier","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'gonzalez@example.com'\nlet pass = 'gonzalez'\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet send_msg_PO = function() {\n    const id_po = flow.get('PO')\n    let inParams = []\n    inParams.push([id_po])\n    //inParams.push([69])\n    let params = []\n    params.push(inParams)\n    params.push({'body':'si es ese','message_type':'comment','subtype_id':1})\n    odoo.execute_kw('purchase.order', 'message_post', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:value})\n        }\n    })\n}\n\nodoo.connect(function (err,value) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        node.send({payload:value})\n        send_msg_PO() \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":340,"y":340,"wires":[["61ce63ef.995bac"]]},{"id":"8aea4e46.38aec","type":"inject","z":"ae642797.19b838","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":460,"wires":[["4b78f1ed.8bac8"]]},{"id":"37f97395.a350ac","type":"debug","z":"ae642797.19b838","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":460,"wires":[]},{"id":"4b78f1ed.8bac8","type":"function","z":"ae642797.19b838","name":"confirmPOclient","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'alan@example.com'\nlet pass = 'alan'\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet create_PO_invoice = function() {\n    const id_po = flow.get('PO')\n    let inParams = []\n    inParams.push([id_po])\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('purchase.order', 'create_full_invoice', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:{INV_suplier:value}})\n        }\n    })\n}\n\nlet create_SO_invoice = function() {\n    const id_so = flow.get('SO')\n    let inParams = []\n    inParams.push([id_so])\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('sale.order', 'create_full_invoice', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:{INV_client:value}})\n            create_PO_invoice()\n        }\n    })\n}\n\nlet confirm_PO = function(so_name,partner_name) {\n    const id_po = flow.get('PO')\n    let inParams = []\n    inParams.push([id_po])\n    //inParams.push([69])\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('purchase.order', 'button_confirm', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            create_SO_invoice();\n            node.send({payload:value})\n        }\n    })\n}\n\nodoo.connect(function (err,value) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        node.send({payload:value})\n        confirm_PO(value) \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":320,"y":460,"wires":[["37f97395.a350ac"]]},{"id":"f61a2c13.dac73","type":"inject","z":"ae642797.19b838","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":400,"wires":[["509ab645.b56b68"]]},{"id":"8403a069.ba212","type":"debug","z":"ae642797.19b838","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":510,"y":400,"wires":[]},{"id":"509ab645.b56b68","type":"function","z":"ae642797.19b838","name":"listMSGsuplierOrClient","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'alan@example.com'\nlet pass = 'alan'\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet list_msg_ids = function() {\n    const id_po = flow.get('PO')\n    let inParams = []\n    inParams.push([id_po])\n    inParams.push([['res_id', '=', id_po]])\n    inParams.push(['message_type','model','res_id','body','author_id','author_avatar','display_name','subtype_id'])\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('purchase.order', 'search_messages', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            for (let index in value) {\n                node.send({payload:value[index]})\n            }\n        }\n    })\n}\n\n\n\nodoo.connect(function (err,value) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        node.send({payload:value})\n        list_msg_ids() \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":340,"y":400,"wires":[["8403a069.ba212"]]},{"id":"6d5cb7ed.2991a8","type":"inject","z":"ae642797.19b838","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":520,"wires":[["aec4b268.dae18"]]},{"id":"f7dc9be5.c37838","type":"debug","z":"ae642797.19b838","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":510,"y":520,"wires":[]},{"id":"aec4b268.dae18","type":"function","z":"ae642797.19b838","name":"addExtraCostsSuplier","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet uid;\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'gonzalez@example.com'\nlet pass = 'gonzalez'\n\nlet POline = {\n    'name':'Materiales',\n    'product_id': 16,\n    'product_uom': 1,\n    'product_qty': 2,\n    'price_unit': 50,\n    'date_planned':'',\n    'order_id': 0,\n}\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet addLinePO = function(so_name,partner_name) {\n    const id_po = flow.get('PO')\n    POline['order_id'] = id_po\n    let inParams = []\n    inParams.push(id_po)\n    let params = []\n    params.push(inParams)\n    params.push({'fields':['date_order']})\n    odoo.execute_kw('purchase.order', 'read', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:value})\n            POline['date_planned'] = value[0]['date_order']\n            node.send({payload:POline})\n            let inParams = []\n            inParams.push(POline)\n            let params = []\n            params.push(inParams)\n            odoo.execute_kw('purchase.order.line', 'create', params, function (err, value) {\n                if (err) {\n                    node.send({payload:err})\n                } else {\n                    node.send({payload:value})\n                }\n            })\n        }\n    })\n}\n\n\nodoo.connect(function (err,value) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        node.send({payload:value})\n        addLinePO() \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":340,"y":520,"wires":[["f7dc9be5.c37838"]]},{"id":"6279bfe.302274","type":"inject","z":"ae642797.19b838","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":580,"wires":[["925c8cce.89c73"]]},{"id":"f3757c44.8d2b5","type":"debug","z":"ae642797.19b838","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":530,"y":580,"wires":[]},{"id":"925c8cce.89c73","type":"function","z":"ae642797.19b838","name":"validateExtraCostsClient","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet uid;\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'alan@example.com'\nlet pass = 'alan'\n\nlet POline = {\n    'name':'Materiales',\n    'product_id': 16,\n    'product_uom': 1,\n    'product_qty': 2,\n    'price_unit': 50,\n    'date_planned':'',\n    'order_id': 0,\n}\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet create_PO_invoice = function() {\n    const id_po = flow.get('PO')\n    let inParams = []\n    inParams.push([id_po])\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('purchase.order', 'create_full_invoice', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:{INV_suplier:value}})\n        }\n    })\n}\n\nlet create_SO_invoice = function() {\n    const id_so = flow.get('SO')\n    let inParams = []\n    inParams.push([id_so])\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('sale.order', 'create_full_invoice', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:{INV_client:value}})\n            create_PO_invoice()\n        }\n    })\n}\n\nlet update_SO_lines = function() {\n    const id_po = flow.get('PO')\n    let inParams = []\n    inParams.push([id_po])\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('purchase.order', 'update_sale_order_lines', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:value})\n            create_SO_invoice()\n        }\n    })\n}\n\nodoo.connect(function (err,value) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        node.send({payload:value})\n        update_SO_lines() \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":350,"y":580,"wires":[["f3757c44.8d2b5"]]},{"id":"fa66051a.8d5218","type":"inject","z":"ae642797.19b838","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":680,"wires":[["fa5e1b72.30db08"]]},{"id":"b92da377.556d3","type":"debug","z":"ae642797.19b838","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":680,"wires":[]},{"id":"fa5e1b72.30db08","type":"function","z":"ae642797.19b838","name":"searchPOfields","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'alan@example.com'\nlet pass = 'alan'\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet search_PO_fields = function() {\n    const id_po = flow.get('PO')\n    let inParams = []\n    inParams.push([['id', '=', id_po]])\n    inParams.push([\n        'name',\n        'note',\n        'title',\n        'commitment_date',\n        'require_materials',\n        'address_street',\n        'address_floor',\n        'address_portal',\n        'address_number',\n        'address_door',\n        'address_stairs',\n        'address_zip_code',\n        'address_latitude',\n        'address_longitude',\n        'address_longitude',\n        'message_partner_ids',\n        \n    ])\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('purchase.order', 'search_read', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            for (let index in value) {\n                node.send({payload:value[index]})\n            }\n        }\n    })\n}\n\nodoo.connect(function (err,value) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        node.send({payload:value})\n        search_PO_fields() \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":320,"y":680,"wires":[["b92da377.556d3"]]},{"id":"6c1ce8fc.377888","type":"inject","z":"ae642797.19b838","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":740,"wires":[["9a075638.1fa3d8"]]},{"id":"edc72b86.cada48","type":"debug","z":"ae642797.19b838","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":490,"y":740,"wires":[]},{"id":"9a075638.1fa3d8","type":"function","z":"ae642797.19b838","name":"sendMsgSOclient","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'alan@example.com'\nlet pass = 'alan'\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet send_msg_SO = function() {\n    const id_po = flow.get('PO')\n    let inParams = []\n    inParams.push([130])\n    let params = []\n    params.push(inParams)\n    params.push({'body':'seguro que ese el precio','message_type':'comment'})\n    odoo.execute_kw('sale.order', 'message_post', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:value})\n        }\n    })\n}\n\nodoo.connect(function (err,value) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        node.send({payload:value})\n        send_msg_SO() \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":330,"y":740,"wires":[["edc72b86.cada48"]]},{"id":"f994ba68.df73e8","type":"file in","z":"4d18240e.c1994c","name":"Logo-Test.png as binary buffer","filename":"/data/projects/odoo_json_rpc/Logo-Test.png","format":"","chunk":false,"sendError":false,"encoding":"none","x":350,"y":180,"wires":[["62136cbe.5764b4"]]},{"id":"b380cafb.38e7b8","type":"inject","z":"4d18240e.c1994c","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":140,"y":180,"wires":[["f994ba68.df73e8"]]},{"id":"8306dc2d.6a5ac","type":"comment","z":"4d18240e.c1994c","name":"leer","info":"en caso de que no funcione cambiar la dirección de lectura de Logo-Test.png segun sea el caso, tiene por defecto la del container\n\nPrimero es necesario haber ejecutado la confimación de la purchase orden en el flujo anterior","x":470,"y":60,"wires":[]},{"id":"62136cbe.5764b4","type":"function","z":"4d18240e.c1994c","name":"sendMsgPOclientWithAttachment","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet file = msg.payload//archivo en forma de buffer binario\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'alan@example.com'\nlet pass = 'alan'\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet send_msg_PO = function() {\n    const id_po = global.get('PO') //id de la purchase order\n    let inParams = []\n    inParams.push([id_po])\n    let params = []\n    params.push(inParams)\n    params.push({'body':'msg','message_type':'comment','subtype_id':1,'attachments':[['test logo.png',file]]})\n    odoo.execute_kw('purchase.order', 'message_post', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:{msg:value}})\n            flow.set('msg_id',value)\n        }\n    })\n}\n\nodoo.connect(function (err,value) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        node.send({payload:value})\n        send_msg_PO() \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":640,"y":180,"wires":[["9bafa00d.5527"]]},{"id":"9bafa00d.5527","type":"debug","z":"4d18240e.c1994c","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":850,"y":180,"wires":[]},{"id":"4fa28964.773148","type":"inject","z":"4d18240e.c1994c","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":350,"y":260,"wires":[["5f52f98f.c53d28"]]},{"id":"d76274ab.54ade8","type":"debug","z":"4d18240e.c1994c","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":670,"y":260,"wires":[]},{"id":"5f52f98f.c53d28","type":"function","z":"4d18240e.c1994c","name":"listMsgAttachments","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'alan@example.com'\nlet pass = 'alan'\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet list_msg_attachments = function(attachments_ids) {\n    let inParams = []\n    inParams.push([['id', 'in', attachments_ids]])\n    inParams.push(['name','res_id','res_model','url','datas','mimetype','file_size'])\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('ir.attachment', 'search_read', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            for (let index in value) {\n                node.send({payload:{attachment:value[index]}})\n            }\n        }\n    })\n}\n\n\nlet list_msg_ids = function() {\n    const msg_id = flow.get('msg_id')// id del msg seteado en el nodo anterior\n    const id_po = global.get('PO')//id de la purchase order\n    let inParams = []\n    inParams.push([id_po])\n    inParams.push([['res_id', '=', id_po],['id', '=', msg_id]])\n    inParams.push(['message_type','model','res_id','body','author_id','author_avatar','display_name','subtype_id','attachment_ids'])\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('purchase.order', 'search_messages', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:{msg:value[0]}})\n            list_msg_attachments(value[0].attachment_ids)\n        }\n    })\n}\n\n\n\nodoo.connect(function (err,value) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        node.send({payload:value})\n        list_msg_ids() \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":510,"y":260,"wires":[["d76274ab.54ade8"]]},{"id":"af45ee74.2c4c9","type":"file in","z":"4d18240e.c1994c","name":"Logo-Test.png as base64 string","filename":"/data/projects/odoo_json_rpc/Logo-Test.png","format":"utf8","chunk":false,"sendError":false,"encoding":"base64","x":350,"y":360,"wires":[["114e020e.78578e"]]},{"id":"8c5713e0.46fb1","type":"inject","z":"4d18240e.c1994c","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":140,"y":360,"wires":[["af45ee74.2c4c9"]]},{"id":"114e020e.78578e","type":"function","z":"4d18240e.c1994c","name":"createPOattachment","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'alan@example.com'\nlet pass = 'alan'\n\nattachement= {\n    'name': 'test logo.png',\n    'datas': msg.payload,\n    'type': 'binary',\n    'description': 'test logo',\n    'res_model': 'purchase.order',\n    'res_id': global.get('PO'),\n}\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet create_PO_attachment = function() {\n    let inParams = []\n    inParams.push(attachement)\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('ir.attachment', 'create', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            node.send({payload:{attachment:value}})\n        }\n    })\n}\n\nodoo.connect(function (err) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        create_PO_attachment() \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":600,"y":360,"wires":[["d67ca81.8177c58"]]},{"id":"d67ca81.8177c58","type":"debug","z":"4d18240e.c1994c","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":770,"y":360,"wires":[]},{"id":"c1c8ea1.1630a18","type":"inject","z":"4d18240e.c1994c","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":350,"y":460,"wires":[["55b9fd82.2f67a4"]]},{"id":"9967a969.6247a8","type":"debug","z":"4d18240e.c1994c","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":690,"y":460,"wires":[]},{"id":"55b9fd82.2f67a4","type":"function","z":"4d18240e.c1994c","name":"listAllPOAttachments","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'alan@example.com'\nlet pass = 'alan'\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet list_PO_attachments = function() {\n    let id_po = global.get('PO')\n    let inParams = []\n    inParams.push([['res_id', '=', id_po]])\n    inParams.push(['name','res_id','res_model','url','datas','mimetype','file_size'])\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('ir.attachment', 'search_read', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            for (let index in value) {\n                node.send({payload:{attachment:value[index]}})\n            }\n        }\n    })\n}\n\nodoo.connect(function (err,value) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        node.send({payload:value})\n        list_PO_attachments() \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":520,"y":460,"wires":[["9967a969.6247a8"]]},{"id":"b547909b.9ef28","type":"function","z":"b6380cda.9ac23","name":"notificationPullSuplier","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'gonzalez@example.com'\nlet pass = 'gonzalez'\n\nlet poll = function(uid,partner_id,partner_name) {\n    let path = '/longpolling/poll'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    node.send({payload:{channel:db + '_' + partner_id.toString()}})\n    client.request('call', {context: {uid:uid}, channels:[db + '_' + partner_id.toString()],last: 0},{context: {lang: 'es_ES', uid:uid}}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:result})\n        }\n    })\n}\n\nlet get_uid_partner = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    let inParams = []\n    inParams.push([uid])\n    let params = []\n    params.push(inParams)\n    params.push({'fields':['partner_id']})\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.users');\n    fparams.push('read');\n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{partner:result[0].partner_id}})\n            poll(uid,result[0].partner_id[0],result[0].partner_id[1])\n            \n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            get_uid_partner(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":400,"y":120,"wires":[["f4b47b4f.3f7858"]]},{"id":"940a9dd9.2944f","type":"inject","z":"b6380cda.9ac23","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":230,"y":120,"wires":[["b547909b.9ef28"]]},{"id":"f4b47b4f.3f7858","type":"debug","z":"b6380cda.9ac23","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":590,"y":120,"wires":[]},{"id":"7e4891c5.85abd","type":"function","z":"b6380cda.9ac23","name":"notificationPullClient","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'alan@example.com'\nlet pass = 'alan'\n\nlet poll = function(uid,partner_id,partner_name) {\n    let path = '/longpolling/poll'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    node.send({payload:{channel:db + '_' + partner_id.toString()}})\n    client.request('call', {context: {uid:uid}, channels:[db + '_' + partner_id.toString()],last: 0},{context: {lang: 'es_ES', uid:uid}}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:result})\n        }\n    })\n}\n\nlet get_uid_partner = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    let inParams = []\n    inParams.push([uid])\n    let params = []\n    params.push(inParams)\n    params.push({'fields':['partner_id']})\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.users');\n    fparams.push('read');\n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{partner:result[0].partner_id}})\n            poll(uid,result[0].partner_id[0],result[0].partner_id[1])\n            \n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            get_uid_partner(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":400,"y":180,"wires":[["ab09481a.6291e8"]]},{"id":"d8474772.b23658","type":"inject","z":"b6380cda.9ac23","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":230,"y":180,"wires":[["7e4891c5.85abd"]]},{"id":"ab09481a.6291e8","type":"debug","z":"b6380cda.9ac23","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":590,"y":180,"wires":[]},{"id":"7a924446.9cf92c","type":"comment","z":"b6380cda.9ac23","name":"leer","info":"notificaciones hasta ahora:\n * notificar a los proveedores sobre la solicitud de presupuesto creada, en la creacion del pedido por el cliente\n * notificar al cliente de la aceptación de una solicitud de presupuesto por el proveedor\n * notificar al cliente en la cancelación de una  solicitud de presupuesto ya aceptado por el proveedor\n * notificar a los proveedores en la cancelacion de una solicitud de presupuesto cuando el cliente acepte otra de las solicitudes\n\ncuando no hay notificaciones, las peticiones responder con un array vacio en mas o menos 50s, si hay alguna notificación en este periodo se devuelve la notificación en el momento, por lo tanto el período para hacer las peticiones debe ser de 1 minuto, al cabo de ese minuto las peticiones ya consultadas no se devuelven mas.","x":410,"y":40,"wires":[]},{"id":"6a5dae65.e219","type":"comment","z":"ae642797.19b838","name":"leer","info":"con la función searchPOfields puden revisar los campos en la PO que se crearon en la SO en createSOclient","x":340,"y":40,"wires":[]},{"id":"4a503173.ab4cc","type":"function","z":"56bacf7d.d66aa","name":"createUser","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'demo'\nlet pass = 'demo'\n\nlet user_to_create = {\n    'name':'Jackie Chang',\n    'classification':'custumer',// puede ser 'custumer','vendor' o 'admin'\n    'login':'custumer@example.com',\n    'email':'custumer@example.com',\n    'password':'custumer',\n    'groups_id':[22,1,11,17,34,23,6,35,20,19]\n    /* groups_id son los mismos para custumer y vendor para admin son: [2,21,36,22,26,7,1,11,17,34,3,23,6,35,20,19]*/\n}\n\nlet createUser = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let inParams = []\n    inParams.push(user_to_create)\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.users');//model\n    fparams.push('create');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{user:result}})\n            flow.set('custumerUID',result)\n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            createUser(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":290,"y":120,"wires":[["9fd3e668.6cefb8"]]},{"id":"e185e31d.1373e","type":"inject","z":"56bacf7d.d66aa","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":120,"wires":[["4a503173.ab4cc"]]},{"id":"9fd3e668.6cefb8","type":"debug","z":"56bacf7d.d66aa","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":120,"wires":[]},{"id":"d87c7c75.a99c9","type":"function","z":"56bacf7d.d66aa","name":"searchUserFields","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'custumer@example.com'\nlet pass = 'custumer'\n\nlet search_user_fields = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let inParams = []\n    inParams.push([['id', '=', uid]])\n    inParams.push([\n        'name',\n        'login',\n        'email',\n        'partner_id',\n        'groups_id',\n        'image_1920'\n    ])\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.users');//model\n    fparams.push('search_read');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{user:result[0]}})\n            flow.set('partnerID',result[0].partner_id[0])\n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            flow.set('custumerUID',result)\n            search_user_fields(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":310,"y":160,"wires":[["9937285d.00d548"]]},{"id":"6f0609b3.7521c8","type":"inject","z":"56bacf7d.d66aa","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":160,"wires":[["d87c7c75.a99c9"]]},{"id":"9937285d.00d548","type":"debug","z":"56bacf7d.d66aa","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":160,"wires":[]},{"id":"f8be66a.a475c98","type":"function","z":"56bacf7d.d66aa","name":"userChangePassword","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'custumer@example.com'\nlet pass = 'custumer'\n\nlet changePassword = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let inParams = []\n    inParams.push('custumer')//old password\n    inParams.push('custumer1')//new password\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.users');//model\n    fparams.push('change_password');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{user:result[0]}})\n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            changePassword(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":320,"y":360,"wires":[["112ba6af.c10749"]]},{"id":"49c97a89.e93ab4","type":"inject","z":"56bacf7d.d66aa","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":360,"wires":[["f8be66a.a475c98"]]},{"id":"112ba6af.c10749","type":"debug","z":"56bacf7d.d66aa","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":490,"y":360,"wires":[]},{"id":"1d2aa5a8.669d0a","type":"comment","z":"56bacf7d.d66aa","name":"about userChangePassword","info":"para permitir a un usuario cambiar su contraseña apartir de la anterior","x":700,"y":360,"wires":[]},{"id":"3ae5ac51.6c2ba4","type":"function","z":"56bacf7d.d66aa","name":"adminChangeUserPassword","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'demo'\nlet pass = 'demo'\n\nlet changePassword = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let custumer_id = flow.get('custumerUID')\n    let inParams = []\n    inParams.push([custumer_id]); //id to update\n    inParams.push({'password': 'custumer'});\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.users');//model\n    fparams.push('write');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{user:result[0]}})\n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            changePassword(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":340,"y":400,"wires":[["79611be1.930954"]]},{"id":"b302c650.9ba298","type":"inject","z":"56bacf7d.d66aa","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":400,"wires":[["3ae5ac51.6c2ba4"]]},{"id":"79611be1.930954","type":"debug","z":"56bacf7d.d66aa","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":530,"y":400,"wires":[]},{"id":"6c5dab85.633c64","type":"function","z":"56bacf7d.d66aa","name":"userSetAvatarImage","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'custumer@example.com'\nlet pass = 'custumer'\n\nlet set_avatar_img = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let custumer_id = flow.get('custumerUID')\n    let inParams = []\n    inParams.push([custumer_id]); //id to update\n    inParams.push({'image_1920':msg.payload});\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.users');//model\n    fparams.push('write');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{user:result[0]}})\n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            set_avatar_img(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":600,"y":280,"wires":[["e5e4076.e5457f8"]]},{"id":"e5e4076.e5457f8","type":"debug","z":"56bacf7d.d66aa","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":770,"y":280,"wires":[]},{"id":"4bd0ad3c.eb2f44","type":"file in","z":"56bacf7d.d66aa","name":"Logo-Test.png as base64 string","filename":"/data/projects/odoo_json_rpc/Logo-Test.png","format":"utf8","chunk":false,"sendError":false,"encoding":"base64","x":350,"y":280,"wires":[["6c5dab85.633c64"]]},{"id":"fbc3136.329d3f","type":"inject","z":"56bacf7d.d66aa","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":280,"wires":[["4bd0ad3c.eb2f44"]]},{"id":"bd43a4f7.8120e8","type":"function","z":"56bacf7d.d66aa","name":"adminSetResPartnerInfo","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'demo'\nlet pass = 'demo'\n\nlet partner_update = {\n    'date':'1992-08-10', //birthdate\n    'address_street' : 'Av. de Monforte de Lemos',\n    'address_floor' : '1',\n    'address_portal' : '',\n    'address_number' : '36',\n    'address_door' : '21',\n    'address_stairs' : '',\n    'address_zip_code' : '28029',\n    'address_latitude' : '40,47558',\n    'address_longitude' : '-3,68992',\n    'vat':'80000000T', //NIF\n    'comment':'',//description\n    'function':'',//job title\n    'phone':'968 88 88 88',\n    'mobile':'618 88 88 88',\n    'is_company':false,//individual person or company\n    'vat_cif':'', //CIF number\n    'social_security':'', //Social security number\n    'iae_code' :'', //I.A.E code\n    'dni':'10000000R' //DNI number\n}\n\nlet set_partner_update = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let partner_id = flow.get('partnerID')\n    let inParams = []\n    inParams.push([partner_id]); //id to update\n    inParams.push(partner_update);\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.partner');//model\n    fparams.push('write');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{user:result[0]}})\n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            set_partner_update(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":330,"y":200,"wires":[["a63a6fd5.7dd34"]]},{"id":"a63a6fd5.7dd34","type":"debug","z":"56bacf7d.d66aa","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":510,"y":200,"wires":[]},{"id":"38df644d.f9bf5c","type":"inject","z":"56bacf7d.d66aa","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":200,"wires":[["bd43a4f7.8120e8"]]},{"id":"d99d78d.d3de888","type":"function","z":"56bacf7d.d66aa","name":"searchPartnerFields","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'custumer@example.com'\nlet pass = 'custumer'\n\nlet search_partner_fields = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let partner_id = flow.get('partnerID')\n    \n    let inParams = []\n    inParams.push([['id', '=', partner_id]])\n    inParams.push([\n        'name',\n        'date',\n        'address_street',\n        'address_floor',\n        'address_portal',\n        'address_number',\n        'address_door',\n        'address_stairs',\n        'address_zip_code',\n        'address_latitude',\n        'address_longitude',\n        'vat',\n        'comment',\n        'function',\n        'phone',\n        'mobile',\n        'is_company',\n        'vat_cif',\n        'social_security',\n        'iae_code',\n        'dni'\n    ])\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.partner');//model\n    fparams.push('search_read');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{partner:result[0]}})\n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            search_partner_fields(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":320,"y":240,"wires":[["c0eb82d5.993fd"]]},{"id":"a7df15fe.c94b38","type":"inject","z":"56bacf7d.d66aa","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":240,"wires":[["d99d78d.d3de888"]]},{"id":"c0eb82d5.993fd","type":"debug","z":"56bacf7d.d66aa","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":490,"y":240,"wires":[]},{"id":"2fee5bd9.937364","type":"inject","z":"ae642797.19b838","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":170,"y":800,"wires":[["e40e9a86.5cf9a8"]]},{"id":"88c016cd.01fc68","type":"debug","z":"ae642797.19b838","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":800,"wires":[]},{"id":"e40e9a86.5cf9a8","type":"function","z":"ae642797.19b838","name":"searchSOfields","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'alan@example.com'\nlet pass = 'alan'\n\nlet odoo = new odoo_xmlrpc({\n    url: 'http://' + host,\n    port: port,\n    db: db,\n    username: user,\n    password: pass\n});\n\nlet search_SO_fields = function() {\n    const id_so = flow.get('SO')\n    let inParams = []\n    inParams.push([['id', '=', id_so]])\n    inParams.push([\n        'name',\n        'state',\n        'invoice_status',\n    ])\n    let params = []\n    params.push(inParams)\n    odoo.execute_kw('sale.order', 'search_read', params, function (err, value) {\n        if (err) {\n            node.send({payload:err})\n        } else {\n            for (let index in value) {\n                node.send({payload:value[index]})\n            }\n        }\n    })\n}\n\nodoo.connect(function (err,value) {\n    if (err) { \n        node.send({payload:err}) \n    } else {\n        node.send({payload:value})\n        search_SO_fields() \n    }\n});\n\n\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":320,"y":800,"wires":[["88c016cd.01fc68"]]},{"id":"b4c7c078.2dc6f","type":"function","z":"b6380cda.9ac23","name":"cancelPOSuplier","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'gonzalez@example.com'\nlet pass = 'gonzalez'\n\nlet cancel_PO = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    const id_po = global.get('PO') //id de la purchase order\n    let inParams = []\n    inParams.push([id_po])\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('purchase.order');//model\n    fparams.push('button_cancel');//method\n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:result})\n            \n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            cancel_PO(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":390,"y":340,"wires":[["6fd6da79.23fff4"]]},{"id":"9e962c7.0c16cd","type":"inject","z":"b6380cda.9ac23","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":230,"y":340,"wires":[["b4c7c078.2dc6f"]]},{"id":"6fd6da79.23fff4","type":"debug","z":"b6380cda.9ac23","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":550,"y":340,"wires":[]},{"id":"934a99a1.81ac78","type":"function","z":"b6380cda.9ac23","name":"cancelSOClient","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'alan@example.com'\nlet pass = 'alan'\n\nlet cancel_SO = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    const id_so = global.get('SO') //id de la purchase order\n    let inParams = []\n    inParams.push([id_so])\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('sale.order');//model\n    fparams.push('action_cancel');//method\n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:result})\n            \n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            cancel_SO(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":380,"y":400,"wires":[["754f805a.84b07"]]},{"id":"caf9caeb.7f3128","type":"inject","z":"b6380cda.9ac23","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":230,"y":400,"wires":[["934a99a1.81ac78"]]},{"id":"754f805a.84b07","type":"debug","z":"b6380cda.9ac23","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":550,"y":400,"wires":[]},{"id":"ceb84d9d.f9eff","type":"function","z":"56bacf7d.d66aa","name":"adminDeactivateUserPartner","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'demo'\nlet pass = 'demo'\n\nlet deactivate_user = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let custumer_id = flow.get('custumerUID')\n    let inParams = []\n    inParams.push([custumer_id]); //id to update\n    inParams.push({'active':false});//to activate set to true\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.users');//model\n    fparams.push('write');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{}})\n            deactivate_partner(uid)\n        }\n    })\n}\n\nlet deactivate_partner = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let partner_id = flow.get('partnerID')\n    let inParams = []\n    inParams.push([partner_id]); //id to update\n    inParams.push({'active':false});//to activate set to true\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.partner');//model\n    fparams.push('write');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{}})\n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            deactivate_user(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":340,"y":500,"wires":[["f3c5c318.ebfda"]]},{"id":"b11250cd.6a998","type":"inject","z":"56bacf7d.d66aa","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":500,"wires":[["ceb84d9d.f9eff"]]},{"id":"f3c5c318.ebfda","type":"debug","z":"56bacf7d.d66aa","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":530,"y":500,"wires":[]},{"id":"9ccec325.6ef85","type":"function","z":"56bacf7d.d66aa","name":"adminActivateUserPartner","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'demo'\nlet pass = 'demo'\n\nlet deactivate_user = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let custumer_id = flow.get('custumerUID')\n    let inParams = []\n    inParams.push([custumer_id]); //id to update\n    inParams.push({'active':true});//to activate set to true\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.users');//model\n    fparams.push('write');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{}})\n            deactivate_partner(uid)\n        }\n    })\n}\n\nlet deactivate_partner = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let partner_id = flow.get('partnerID')\n    let inParams = []\n    inParams.push([partner_id]); //id to update\n    inParams.push({'active':true});//to activate set to true\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.partner');//model\n    fparams.push('write');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{}})\n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            deactivate_user(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":330,"y":540,"wires":[["3cd3d6c8.15694a"]]},{"id":"c3b424f9.6ba7a8","type":"inject","z":"56bacf7d.d66aa","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":150,"y":540,"wires":[["9ccec325.6ef85"]]},{"id":"3cd3d6c8.15694a","type":"debug","z":"56bacf7d.d66aa","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":530,"y":540,"wires":[]},{"id":"7f08e863.86eba8","type":"function","z":"2258375b.14d9f8","name":"adminCreateServiceProduct","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'demo'\nlet pass = 'demo'\n\nlet service_product = {\n    'name':'Servicio de Plomería',\n    'classification':'service',// puede ser 'service' o 'cost'(costos mano de obra materiales etc) esta es la propiedad para identficar estos productos en la ap\n    'description':'',//descripcion \n    'type':'service',\n    'sale_ok':true,\n    'purchase_ok':true,\n    'invoice_policy':'order',\n    'purchase_method':'purchase',\n    'taxes_id':[2],//fijo imp 21% \n    'supplier_taxes_id':[5],//fijo imp 21%\n    'image_1920':msg.payload\n}\n\nlet createProduct = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let inParams = []\n    inParams.push(service_product)\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('product.product');//model\n    fparams.push('create');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{product:result}})\n            flow.set('productID',result)\n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            createProduct(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":580,"y":120,"wires":[["9e6f3b12.9ff1c8"]]},{"id":"6878e857.086b48","type":"inject","z":"2258375b.14d9f8","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":110,"y":120,"wires":[["cace8b28.0d9328"]]},{"id":"9e6f3b12.9ff1c8","type":"debug","z":"2258375b.14d9f8","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":770,"y":120,"wires":[]},{"id":"cc4dce4b.b2b0b","type":"function","z":"2258375b.14d9f8","name":"searchProductFields","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'demo'\nlet pass = 'demo'\n\nlet search_product_fields = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let product_id = flow.get('productID')\n    \n    let inParams = []\n    inParams.push([['id', '=', product_id]])\n    inParams.push([\n        'name',\n        'description',\n        'type',\n        'categ_id',\n        'sale_ok',\n        'purchase_ok',\n        'seller_ids',\n        'product_tmpl_id',\n        'invoice_policy',\n        'purchase_method',\n        'taxes_id',\n        'supplier_taxes_id',\n        'product_tmpl_id',\n        \n    ])\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('product.product');//model\n    fparams.push('search_read');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{product:result[0]}})\n            flow.set('productTemplateID',result[0].product_tmpl_id[0])\n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            search_product_fields(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":480,"y":180,"wires":[["e9640a71.c59d38"]]},{"id":"1dfe2c47.e81f84","type":"inject","z":"2258375b.14d9f8","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":310,"y":180,"wires":[["cc4dce4b.b2b0b"]]},{"id":"e9640a71.c59d38","type":"debug","z":"2258375b.14d9f8","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":650,"y":180,"wires":[]},{"id":"cace8b28.0d9328","type":"file in","z":"2258375b.14d9f8","name":"Logo-Test.png as base64 string","filename":"/data/projects/odoo_json_rpc/Logo-Test.png","format":"utf8","chunk":false,"sendError":false,"encoding":"base64","x":310,"y":120,"wires":[["7f08e863.86eba8"]]},{"id":"db3ce03f.7c444","type":"function","z":"2258375b.14d9f8","name":"createUserPlumber","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'demo'\nlet pass = 'demo'\n\nlet user_to_create = {\n    'name':'Jhon Doe',\n    'classification':'vendor',// puede ser 'custumer','vendor' o 'admin'\n    'login':'plumber@example.com',\n    'email':'plumber@example.com',\n    'password':'plumber',\n    'groups_id':[22,1,11,17,34,23,6,35,20,19],\n    /* groups_id son los mismos para custumer y vendor para admin son: [2,21,36,22,26,7,1,11,17,34,3,23,6,35,20,19]*/\n    'image_1920':msg.payload\n}\n\nlet createUser = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let inParams = []\n    inParams.push(user_to_create)\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.users');//model\n    fparams.push('create');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{user:result}})\n            flow.set('custumerUID',result)\n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            createUser(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":650,"y":280,"wires":[["c0712dcd.15741"]]},{"id":"fd272c66.72f38","type":"inject","z":"2258375b.14d9f8","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":210,"y":280,"wires":[["b9d9886a.af5a38"]]},{"id":"c0712dcd.15741","type":"debug","z":"2258375b.14d9f8","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":810,"y":280,"wires":[]},{"id":"b2c7891f.7064c8","type":"function","z":"2258375b.14d9f8","name":"searchUserFields","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'plumber@example.com'\nlet pass = 'plumber'\n\nlet search_user_fields = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let inParams = []\n    inParams.push([['id', '=', uid]])\n    inParams.push([\n        'name',\n        'login',\n        'email',\n        'partner_id',\n        'groups_id',\n        'image_1920'\n    ])\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.users');//model\n    fparams.push('search_read');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{user:result[0]}})\n            flow.set('partnerID',result[0].partner_id[0])\n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            flow.set('custumerUID',result)\n            search_user_fields(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":370,"y":320,"wires":[["dab61d3a.01f65"]]},{"id":"f49fe10c.5e597","type":"inject","z":"2258375b.14d9f8","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":210,"y":320,"wires":[["b2c7891f.7064c8"]]},{"id":"dab61d3a.01f65","type":"debug","z":"2258375b.14d9f8","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":530,"y":320,"wires":[]},{"id":"57dfff20.22a59","type":"function","z":"2258375b.14d9f8","name":"adminSetResPartnerInfo","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'demo'\nlet pass = 'demo'\n\nlet partner_update = {\n    'date':'1992-08-10', //birthdate\n    'address_street' : 'Av. de Monforte de Lemos',\n    'address_floor' : '1',\n    'address_portal' : '',\n    'address_number' : '36',\n    'address_door' : '21',\n    'address_stairs' : '',\n    'address_zip_code' : '28029',\n    'address_latitude' : '40,47558',\n    'address_longitude' : '-3,68992',\n    'vat':'80000000T', //NIF\n    'comment':'',//description\n    'function':'',//job title\n    'phone':'968 88 88 88',\n    'mobile':'618 88 88 88',\n    'is_company':false,//individual person or company\n    'vat_cif':'', //CIF number\n    'social_security':'', //Social security number\n    'iae_code' :'', //I.A.E code\n    'dni':'10000000R', //DNI number\n    'product_supply_ids':[//subscripciones para ser supplier \n        [0,0,\n            {\n                'name':flow.get('partnerID'),\n                'product_tmpl_id':flow.get('productTemplateID'),//template_id optenido del servicio del que va a ser supplier\n            }\n        ],\n    ]\n}\n\nlet set_partner_update = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let partner_id = flow.get('partnerID')\n    let inParams = []\n    inParams.push([partner_id]); //id to update\n    inParams.push(partner_update);\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.partner');//model\n    fparams.push('write');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{user:result[0]}})\n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            set_partner_update(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":390,"y":360,"wires":[["60f9900f.e0039"]]},{"id":"60f9900f.e0039","type":"debug","z":"2258375b.14d9f8","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":570,"y":360,"wires":[]},{"id":"33151c09.33bc04","type":"inject","z":"2258375b.14d9f8","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":210,"y":360,"wires":[["57dfff20.22a59"]]},{"id":"d8546f17.99416","type":"function","z":"2258375b.14d9f8","name":"searchPartnerFields","func":"let odoo_xmlrpc = global.get('odoo_xmlrpc')\nlet xmlrpc = global.get('xmlrpc')\nlet jsonrpc = global.get('jayson')\n\nlet host = '172.17.0.5'\nlet port = 8069\nlet db = 'demo'\nlet user = 'custumer@example.com'\nlet pass = 'custumer'\n\nlet search_partner_fields = function (uid) {\n    let path = '/jsonrpc'\n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n    \n    let partner_id = flow.get('partnerID')\n    \n    let inParams = []\n    inParams.push([['id', '=', partner_id]])\n    inParams.push([\n        'name',\n        'date',\n        'address_street',\n        'address_floor',\n        'address_portal',\n        'address_number',\n        'address_door',\n        'address_stairs',\n        'address_zip_code',\n        'address_latitude',\n        'address_longitude',\n        'vat',\n        'comment',\n        'function',\n        'phone',\n        'mobile',\n        'is_company',\n        'vat_cif',\n        'social_security',\n        'iae_code',\n        'dni',\n        'product_supply_ids'\n    ])\n    let params = []\n    params.push(inParams)\n    \n    let fparams = [];\n    fparams.push(db);\n    fparams.push(uid);\n    fparams.push(pass);\n    fparams.push('res.partner');//model\n    fparams.push('search_read');//method\n    \n    for(let i = 0; i <params.length; i++){\n        fparams.push(params[i]);\n    }\n\n    client.request('call', {service:'object', method:'execute_kw', args:fparams}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{partner:result[0]}})\n        }\n    })\n}\n\n\nlet connect = function () {\n    let path = '/jsonrpc'\n    \n    let client = jsonrpc.client.http('http://' + host + ':' + port + path)\n\n    client.request('call', {service:'common', method:'login', args:[db, user, pass]}, function(err, error, result) {\n        if(err){\n            node.send({payload:err}) \n        } else {\n            node.send({payload:{uid:result}})\n            search_partner_fields(result)\n            \n        }\n    })\n}\n\nconnect()\n\nreturn","outputs":1,"noerr":0,"initialize":"","finalize":"","x":380,"y":400,"wires":[["ec9d42cd.b529f"]]},{"id":"52198b73.5f0264","type":"inject","z":"2258375b.14d9f8","name":"inject","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":210,"y":400,"wires":[["d8546f17.99416"]]},{"id":"ec9d42cd.b529f","type":"debug","z":"2258375b.14d9f8","name":"result","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":550,"y":400,"wires":[]},{"id":"b9d9886a.af5a38","type":"file in","z":"2258375b.14d9f8","name":"Logo-Test.png as base64 string","filename":"/data/projects/odoo_json_rpc/Logo-Test.png","format":"utf8","chunk":false,"sendError":false,"encoding":"base64","x":410,"y":280,"wires":[["db3ce03f.7c444"]]}]